-- Create Roles Table
CREATE TABLE Roles (
    RoleID INT IDENTITY(1,1) PRIMARY KEY,
    RoleName NVARCHAR(50) UNIQUE NOT NULL
);

-- Create Admi Table
CREATE TABLE Admin (
    Admin_ID INT IDENTITY(1,1) PRIMARY KEY,
    FullName VARCHAR(255) NOT NULL,
    Email VARCHAR(255) UNIQUE NOT NULL,
    Password VARCHAR(255) NOT NULL,
    RoleID INT NOT NULL, -- Foreign Key to Roles Table
    CONSTRAINT FK_Users_Roles FOREIGN KEY (RoleID) REFERENCES Roles(RoleID)
);

-- Create Products Table
CREATE TABLE Products (
    ProductID INT IDENTITY(1,1) PRIMARY KEY,
    ProductName VARCHAR(255) NOT NULL,
    Price DECIMAL(10,2) NOT NULL,
    Category VARCHAR(30) NOT NULL,
    Description VARCHAR(MAX),
    StockQuantity INT DEFAULT 0,
    CreatedAt DATETIME DEFAULT GETDATE(),
    -- CONSTRAINT FK_Products_Categories FOREIGN KEY (CategoryID) REFERENCES Categories(CategoryID)
    -- CONSTRAINT FK_Products_Admin FOREIGN KEY (CreatedBy) REFERENCES Users(UserID)
);

CREATE TABLE CART(
    USER_ID INT IDENTITY(1,1) PRIMARY KEY,
	PRODUCT_ID INT NOT NULL,
	TOTAL_AMT MONEY NOT NULL
);

-- Create Orders Table
CREATE TABLE Orders (
    OrderID INT IDENTITY(1,1) PRIMARY KEY,
    UserID INT NOT NULL,
    TotalAmount DECIMAL(10,2) NOT NULL,
    OrderStatus VARCHAR(50) DEFAULT 'Pending',
    CreatedAt DATETIME DEFAULT GETDATE()
    -- CONSTRAINT FK_Orders_Users FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

-- Create Inventory Table
CREATE TABLE Inventory (
    InventoryID INT IDENTITY(1,1) PRIMARY KEY,
    ProductID INT NOT NULL,
	STOCK_LEFT INT NOT NULL,
    -- CONSTRAINT FK_Inventory_Products FOREIGN KEY (ProductID) REFERENCES Products(ProductID),
    -- CONSTRAINT FK_Inventory_Admin FOREIGN KEY (ChangedBy) REFERENCES Users(UserID)
);

-- Create Users Table
CREATE TABLE Users (
    UserID INT IDENTITY(1,1) PRIMARY KEY,
    FullName VARCHAR(255) NOT NULL,
    Email VARCHAR(255) UNIQUE NOT NULL,
    Password VARCHAR(255) NOT NULL,
    RoleID INT NOT NULL, -- Foreign Key to Roles Table
    CreatedAt DATETIME DEFAULT GETDATE(),
    -- CONSTRAINT FK_Users_Roles FOREIGN KEY (RoleID) REFERENCES Roles(RoleID)
);


-- Insert Default Roles (Admin & Customer)
INSERT INTO Roles (RoleName) VALUES ('Admin'), ('Customer');

-- Create Categories Table
CREATE TABLE Categories (
    CategoryID INT IDENTITY(1,1) PRIMARY KEY,
    CategoryName NVARCHAR(100) UNIQUE NOT NULL
);


-- Create OrderDetails Table
CREATE TABLE OrderDetails (
    OrderDetailID INT IDENTITY(1,1) PRIMARY KEY,
    OrderID INT NOT NULL,
    ProductID INT NOT NULL,
    Quantity INT NOT NULL,
    Price DECIMAL(10,2) NOT NULL,
    CONSTRAINT FK_OrderDetails_Orders FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    CONSTRAINT FK_OrderDetails_Products FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

-- Create Payments Table
CREATE TABLE Payments (
    PaymentID INT IDENTITY(1,1) PRIMARY KEY,
    OrderID INT NOT NULL,
    PaymentMethod NVARCHAR(50) NOT NULL,
    PaymentStatus NVARCHAR(50) DEFAULT 'Pending',
    TransactionID NVARCHAR(255) UNIQUE,
    PaidAmount DECIMAL(10,2),
    PaidAt DATETIME,
    CONSTRAINT FK_Payments_Orders FOREIGN KEY (OrderID) REFERENCES Orders(OrderID)
);


-- Create Shipping Table
CREATE TABLE Shipping (
    ShippingID INT IDENTITY(1,1) PRIMARY KEY,
    OrderID INT NOT NULL,
    Address NVARCHAR(255) NOT NULL,
    City NVARCHAR(100) NOT NULL,
    PostalCode NVARCHAR(20),
    Country NVARCHAR(100) NOT NULL,
    TrackingNumber NVARCHAR(100) UNIQUE,
    ShippingStatus NVARCHAR(50) DEFAULT 'Processing',
    EstimatedDelivery DATETIME,
    CONSTRAINT FK_Shipping_Orders FOREIGN KEY (OrderID) REFERENCES Orders(OrderID)
);

-- Create an Admin User (Default)
-- INSERT INTO Users (FullName, Email, PasswordHash, RoleID) 
-- VALUES ('Admin User', 'admin@trendtrove.com', 'hashedpassword123', 1);
